name: "CI"
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
    branches:
      - "**"

jobs:
  test:
    name: CI Test Suite
    runs-on: buildjet-32vcpu-ubuntu-2204
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: rust-cache
        uses: buildjet/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: test-rust-nightly-2024-02-22-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: rust-nightly-2024-02-22-

      - name: Install nightly toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-02-22
          override: true

      - name: Run cargo test (rotate)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features "ci"
        env:
          RUST_LOG: 1
          RUST_BACKTRACE: 1
        working-directory: ./rotate

      - name: Run cargo test (script)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features "ci"
        env:
          RUST_LOG: 1
          RUST_BACKTRACE: 1
        working-directory: ./script

      - name: Run cargo test (primitives)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features "ci"
        env:
          RUST_LOG: 1
          RUST_BACKTRACE: 1
        working-directory: ./primitives

      - name: Run cargo test (header-range)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features "ci"
        env:
          RUST_LOG: 1
          RUST_BACKTRACE: 1
        working-directory: ./header-range

  lints:
    name: Formatting & Clippy
    runs-on: buildjet-32vcpu-ubuntu-2204
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: rust-cache
        uses: buildjet/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.rustup/
          key: clippy-rust-nightly-2024-02-22-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: rust-nightly-2024-02-22-

      - name: Install nightly toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-02-22
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt (rotate)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./rotate

      - name: Run cargo fmt (script)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./script

      - name: Run cargo fmt (primitives)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./primitives

      - name: Run cargo fmt (header-range)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./header-range

      - name: Run cargo clippy (rotate)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./rotate

      - name: Run cargo clippy (script)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./script

      - name: Run cargo clippy (primitives)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./primitives

      - name: Run cargo clippy (header-range)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
        working-directory: ./header-range